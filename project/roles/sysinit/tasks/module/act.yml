---
- name: Act - Exists
  stat:
    path: /usr/local/bin/act
  register: act_exists_result

- block:
    - name: Act - Get installed version
      command: act --version
      register: act_version_result

    - name: Act - Find installed version
      set_fact:
        act_version_found: "{{ act_version_result.stdout | regex_search(regexp,'\\1') }}"
      vars:
        regexp: 'act\sversion\s(.*)$'

    - name: Act - Set installed version
      set_fact:
        act_installed_version: "{{ act_version_found[0] }}"
  when: act_exists_result.stat.exists != false and upgrade == true

- block:
    - name: Act - Get latest
      community.general.github_release:
        user: nektos
        repo: act
        action: latest_release
        token: "{{ github_token }}"
      register: act_latest_version

    - name: Act - Set latest version
      set_fact:
        act_latest_version: "{{ act_latest_version.tag[1:] }}"

    - name: "Act - Versions"
      debug:
        msg: "installed: {{ act_installed_version|default('N/A') }}, latest: {{ act_latest_version }}"
  when: act_exists_result.stat.exists == false or upgrade == true

- name: Act - Install/Upgrade
  unarchive:
    src: "https://github.com/nektos/act/releases/download/v{{ act_latest_version }}/act_{{ ansible_system }}_{{ ansible_userspace_architecture }}.tar.gz"
    dest: /usr/local/bin
    mode: 'u+x,g+x,o+x'
    remote_src: yes
    force: true
  when: (act_exists_result.stat.exists == false) or upgrade == true and (act_installed_version != act_latest_version)