---
- name: Terraform - Exists
  stat:
    path: /usr/local/bin/terraform
  register: terraform_exists_result

- block:
    - name: Terraform - Get installed version
      command: terraform --version
      register: terraform_version_result

    - name: Terraform - Search installed version
      set_fact:
        terraform_installed_version_result: "{{ terraform_installed_version_result | default([]) +  [item] }}"
      when: item | regex_search(regexp,'\\1')
      vars:
        regexp: 'Terraform\sv(.*)$'
      with_items:
        - "{{ terraform_version_result.stdout_lines }}"

    - name: Terraform - Set installed version
      set_fact:
        terraform_installed_version: "{{ terraform_installed_version_result[0] | regex_search(regexp,'\\1') }}"
      vars:
        regexp: 'Terraform\sv(.*)$'

    - name: "Terraform - Debug: Installed version"
      debug:
        msg: "{{ terraform_installed_version }}"
      when: debug == true
  when: terraform_exists_result.stat.exists != false and upgrade == true

- block:
    - name: Terraform - Get latest
      community.general.github_release:
        user: hashicorp
        repo: terraform
        action: latest_release
        token: "{{ github_token }}"
      register: terraform_latest_version_result

    - name: Terraform - Set latest version
      set_fact:
        terraform_latest_version: "{{ terraform_latest_version_result.tag[1:] }}"

    - name: "Terraform - Debug: latest version"
      debug:
        msg: "{{ terraform_latest_version }}"
      when: debug == true
  when: terraform_exists_result.stat.exists == false or upgrade == true

# - block:
#     - name: Terraform - Search latest version
#       set_fact:
#         terraform_latest_version_result: "{{ terraform_latest_version_result | default([]) +  [item] }}"
#       when: "{{ item | regex_search(regexp,'\\1') }}"
#       vars:
#         regexp: 'is\s(\d+\.\d+\.\d+).*$'
#       with_items:
#         - "{{ terraform_version_result.stdout_lines }}"

#     - name: Terraform - Set latest version
#       set_fact:
#         terraform_latest_version: "{{ terraform_latest_version_result[0] | regex_search(regexp,'\\1') }}"
#       vars:
#         regexp: 'is\s(\d+\.\d+\.\d+).*$'

#     - name: "Terraform - Debug:  Latest version"
#       debug:
#         msg: "{{ terraform_latest_version }}"
#       when: debug == true
#   when: terraform_exists_result.stat.exists == false or upgrade == true

- name: Terraform Install/Upgrade
  unarchive:
    src: "https://releases.hashicorp.com/terraform/{{ terraform_latest_version }}/terraform_{{ terraform_latest_version }}_linux_amd64.zip"
    dest: /usr/local/bin
    remote_src: true
  when: >-
    terraform_exists_result.stat.exists == false or
    (terraform_exists_result.stat.exists != false and
    upgrade == true and
    terraform_latest_version != terraform_installed_version[0])
