---
- name: Atlantis - Exists
  stat:
    path: /usr/local/bin/atlantis
  register: atlantis_exists_result

- block:
    - name: Atlantis - Get installed version
      command: atlantis version
      register: atlantis_version_result

    - name: Atlantis - Set installed version
      set_fact:
        atlantis_installed_version: "{{ atlantis_version_result.stdout | regex_search(regexp,'\\1') }}"
      vars:
        regexp: 'atlantis\s(.*)$'

    - name: "Atlantis - Debug: Installed version"
      debug:
        msg: "{{ atlantis_installed_version }}"
      when: debug == true
  when: atlantis_exists_result.stat.exists != false and upgrade == true

- block:
    - name: Atlantis - Get latest
      community.general.github_release:
        user: runatlantis
        repo: atlantis
        action: latest_release
        token: "{{ github_token }}"
      register: atlantis_latest_version_result

    - name: Atlantis - Set latest version
      set_fact:
        atlantis_latest_version: "{{ atlantis_latest_version_result.tag[1:] }}"

    - name: "Atlantis - Debug:  Latest version"
      debug:
        msg: "{{ atlantis_latest_version }}"
      when: debug == true

    - name: Atlantis - Install/Upgrade
      unarchive:
        src: "https://github.com/runatlantis/atlantis/releases/download/{{ atlantis_latest_version_result.tag }}/atlantis_linux_amd64.zip"
        dest: /usr/local/bin
        remote_src: yes
      when: (atlantis_exists_result.stat.exists == False) or (atlantis_installed_version != atlantis_latest_version)
  when:
    - (atlantis_exists_result.stat.exists == false) or (atlantis_exists_result.stat.exists != false and upgrade == true)
