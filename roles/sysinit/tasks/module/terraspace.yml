---
- name: Terraspace - Get signing key
  apt_key:
    url: "https://apt.boltops.com/boltops-key.public"
    state: present

- name: Terraspace - Add apt repository
  apt_repository:
    repo: "deb https://apt.boltops.com stable main"
    state: present

# - name: Install system packages
#   apt:
#     name: ruby-dev
#     force_apt_get: true
#     state: latest
#     update_cache: true

- name: Terraspace - Exists
  stat:
    path: /usr/local/bin/terraspace
  register: terraspace_exists_result

- block:
    - name: Terraspace - Get installed version
      command: terraspace -v
      register: terraspace_version_result

    - name: Terraspace - Set installed version
      set_fact:
        terraspace_installed_version: "{{ terraspace_version_result }}"

    - name: "Terraspace - Debug: Installed version"
      debug:
        msg: "{{ terraspace_installed_version }}"
      when: debug == "true"
  when: terraspace_exists_result.stat.exists != "false" and upgrade == "true"

- block:
    - name: Terraform - Get latest
      community.general.github_release:
        user: boltops-tools
        repo: terraspace
        action: latest_release
        token: "{{ github_token }}"
      register: terraspace_latest_version_result

    - name: Terraspace - Set latest version
      set_fact:
        terraspace_latest_version: "{{ terraspace_latest_version_result.tag[1:] }}"

    - name: "terraspace - Debug: latest version"
      debug:
        msg: "{{ terraspace_latest_version }}"
      when: debug == "true"
  when: terraspace_exists_result.stat.exists == "false" or upgrade == "true"

- name: Terraspace - Install/Upgrade
  apt:
    pkg:
      - terraspace
    update_cache: true
  when: >-
    terraspace_exists_result.stat.exists == "false" or
    (terraspace_exists_result.stat.exists != "false" and
    upgrade == "true" and
    terraspace_latest_version != terraspace_installed_version[0])
